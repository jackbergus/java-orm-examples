/**
 * This class is generated by jOOQ
 */
package it.giacomobergami.jOOQ.model.tables;


import it.giacomobergami.jOOQ.model.Employees;
import it.giacomobergami.jOOQ.model.Keys;
import it.giacomobergami.jOOQ.model.tables.records.DeptManagerRecord;

import java.sql.Date;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DeptManager extends TableImpl<DeptManagerRecord> {

    private static final long serialVersionUID = -1067635;

    /**
     * The reference instance of <code>employees.dept_manager</code>
     */
    public static final DeptManager DEPT_MANAGER = new DeptManager();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<DeptManagerRecord> getRecordType() {
        return DeptManagerRecord.class;
    }

    /**
     * The column <code>employees.dept_manager.emp_no</code>.
     */
    public final TableField<DeptManagerRecord, Integer> EMP_NO = createField("emp_no", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>employees.dept_manager.dept_no</code>.
     */
    public final TableField<DeptManagerRecord, String> DEPT_NO = createField("dept_no", org.jooq.impl.SQLDataType.CHAR.length(4).nullable(false), this, "");

    /**
     * The column <code>employees.dept_manager.from_date</code>.
     */
    public final TableField<DeptManagerRecord, Date> FROM_DATE = createField("from_date", org.jooq.impl.SQLDataType.DATE.nullable(false), this, "");

    /**
     * The column <code>employees.dept_manager.to_date</code>.
     */
    public final TableField<DeptManagerRecord, Date> TO_DATE = createField("to_date", org.jooq.impl.SQLDataType.DATE.nullable(false), this, "");

    /**
     * Create a <code>employees.dept_manager</code> table reference
     */
    public DeptManager() {
        this("dept_manager", null);
    }

    /**
     * Create an aliased <code>employees.dept_manager</code> table reference
     */
    public DeptManager(String alias) {
        this(alias, DEPT_MANAGER);
    }

    private DeptManager(String alias, Table<DeptManagerRecord> aliased) {
        this(alias, aliased, null);
    }

    private DeptManager(String alias, Table<DeptManagerRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Employees.EMPLOYEES;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<DeptManagerRecord> getPrimaryKey() {
        return Keys.KEY_DEPT_MANAGER_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<DeptManagerRecord>> getKeys() {
        return Arrays.<UniqueKey<DeptManagerRecord>>asList(Keys.KEY_DEPT_MANAGER_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<DeptManagerRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<DeptManagerRecord, ?>>asList(Keys.DEPT_MANAGER_IBFK_1, Keys.DEPT_MANAGER_IBFK_2);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DeptManager as(String alias) {
        return new DeptManager(alias, this);
    }

    /**
     * Rename this table
     */
    public DeptManager rename(String name) {
        return new DeptManager(name, null);
    }
}
