/**
 * This class is generated by jOOQ
 */
package it.giacomobergami.jOOQ.model.tables.daos;


import it.giacomobergami.jOOQ.model.tables.DeptEmp;
import it.giacomobergami.jOOQ.model.tables.records.DeptEmpRecord;

import java.sql.Date;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.Record2;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DeptEmpDao extends DAOImpl<DeptEmpRecord, it.giacomobergami.jOOQ.model.tables.pojos.DeptEmp, Record2<Integer, String>> {

    /**
     * Create a new DeptEmpDao without any configuration
     */
    public DeptEmpDao() {
        super(DeptEmp.DEPT_EMP, it.giacomobergami.jOOQ.model.tables.pojos.DeptEmp.class);
    }

    /**
     * Create a new DeptEmpDao with an attached configuration
     */
    public DeptEmpDao(Configuration configuration) {
        super(DeptEmp.DEPT_EMP, it.giacomobergami.jOOQ.model.tables.pojos.DeptEmp.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Record2<Integer, String> getId(it.giacomobergami.jOOQ.model.tables.pojos.DeptEmp object) {
        return compositeKeyRecord(object.getEmpNo(), object.getDeptNo());
    }

    /**
     * Fetch records that have <code>emp_no IN (values)</code>
     */
    public List<it.giacomobergami.jOOQ.model.tables.pojos.DeptEmp> fetchByEmpNo(Integer... values) {
        return fetch(DeptEmp.DEPT_EMP.EMP_NO, values);
    }

    /**
     * Fetch records that have <code>dept_no IN (values)</code>
     */
    public List<it.giacomobergami.jOOQ.model.tables.pojos.DeptEmp> fetchByDeptNo(String... values) {
        return fetch(DeptEmp.DEPT_EMP.DEPT_NO, values);
    }

    /**
     * Fetch records that have <code>from_date IN (values)</code>
     */
    public List<it.giacomobergami.jOOQ.model.tables.pojos.DeptEmp> fetchByFromDate(Date... values) {
        return fetch(DeptEmp.DEPT_EMP.FROM_DATE, values);
    }

    /**
     * Fetch records that have <code>to_date IN (values)</code>
     */
    public List<it.giacomobergami.jOOQ.model.tables.pojos.DeptEmp> fetchByToDate(Date... values) {
        return fetch(DeptEmp.DEPT_EMP.TO_DATE, values);
    }
}
